// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wizard.ScoreSheet.Data;

#nullable disable

namespace Wizard.ScoreSheet.Migrations
{
    [DbContext(typeof(WizardScoreSheetContext))]
    partial class WizardScoreSheetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wizard.ScoreSheet.Models.PlayerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentBid")
                        .HasColumnType("int");

                    b.Property<int>("CurrentScore")
                        .HasColumnType("int");

                    b.Property<bool>("Dealer")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PlayerTurn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlayerModel");
                });

            modelBuilder.Entity("Wizard.ScoreSheet.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bid")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerModelId")
                        .HasColumnType("int");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int");

                    b.Property<int>("Tricks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerModelId");

                    b.ToTable("Round");
                });

            modelBuilder.Entity("Wizard.ScoreSheet.Models.Round", b =>
                {
                    b.HasOne("Wizard.ScoreSheet.Models.PlayerModel", null)
                        .WithMany("PreviousRounds")
                        .HasForeignKey("PlayerModelId");
                });

            modelBuilder.Entity("Wizard.ScoreSheet.Models.PlayerModel", b =>
                {
                    b.Navigation("PreviousRounds");
                });
#pragma warning restore 612, 618
        }
    }
}
